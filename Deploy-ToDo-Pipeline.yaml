trigger:
  - none
  
pool: 'Azure Pipelines'

parameters:
  - name: Environment
    displayName: Environment
    type: string
    default: 'dev'

  - name: chartVersion
    displayName: Chart Version
    type: string
    default: "0.3.0"  
  - name: Namespace
    displayName: Deployment Namespace
    type: string
    default: default

variables:
  - name: chartPath
    value: "helm/todo"
  - name: chartName
    value: "todo"
  - name: releaseName
    value: todo-release

stages:
  - stage: Deploy
    displayName: (${{ parameters.Environment }}) - Deploy ${{ variables.chartName }}
    jobs:
      - job: CreateDeploymentBundles
        displayName: Create Deployment Bundles
        steps:
          - task: HelmInstaller@1
            displayName: Helm Installer
            inputs:
              helmVersionToInstall: latest
          - task: HelmDeploy@0
            displayName: Helm Package
            inputs:
              command: package
              chartPath: $(chartPath)
              version: $(chartVersion)
              destination: $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            displayName: Publish Artifact
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: $(chartName)
              publishLocation: Container
      - job: DeployToKubernetes
        displayName: Deploy to Kubernetes
        dependsOn: CreateDeploymentBundles
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Download Artifact
            inputs:
              artifactName: $(chartName)
              downloadPath: $(System.DefaultWorkingDirectory)
          - task: HelmInstaller@1
            displayName: Helm Installer
            inputs:
              helmVersionToInstall: latest
          - task: HelmDeploy@0
            displayName: Helm Deploy
            inputs:
              command: upgrade
              chartPath: $(chartPath)
              releaseName: $(releaseName)
              namespace: $(Namespace)
              overrideValues: |
                image.repository: $(Build.Repository.Name)
                image.tag: $(Build.BuildId)
              install: true
              waitForExecution: true
  